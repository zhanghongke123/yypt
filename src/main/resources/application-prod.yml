spring:

  ## quartz定时任务,采用数据库方式
  quartz:
    job-store-type: jdbc
    initialize-schema: embedded
    #设置自动启动，默认为 true
    auto-startup: true
    #启动时更新己存在的Job
    overwrite-existing-jobs: true
    properties:
      org:
        quartz:
          scheduler:
            instanceName: MyScheduler
            instanceId: AUTO
          jobStore:
            class: org.quartz.impl.jdbcjobstore.JobStoreTX
            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
            tablePrefix: QRTZ_
            isClustered: true
            misfireThreshold: 60000
            clusterCheckinInterval: 10000
          threadPool:
            class: org.quartz.simpl.SimpleThreadPool
            threadCount: 10
            threadPriority: 5
            threadsInheritContextClassLoaderOfInitializingThread: true

  #aop
  aop:
    proxy-target-class: true
  #序列化配置
  jackson:
      date-format: yyyy-MM-dd HH:mm:ss
      time-zone: GMT+8
  #Redis
  redis:
    host: 127.0.0.1
    port: 6379
    password:
    database: 2
    jedis:
      pool:
        min-idle: 8
        max-wait: 200000
        max-active: 2000
        max-idle: 500
        timeout: 0
  #排除依赖
  autoconfigure:
    exclude: com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure


  #druid
  datasource:
    druid:
      stat-view-servlet:
        enabled: true
        login-username: admin
        login-password: 123456
        allow:
      web-stat-filter:
        enabled: true
    dynamic:
      # 严格模式
      strict: true
      p6spy: true
      druid:
        filters: stat
      #      druid: #以下是全局默认值，可以全局更改
      #        initial-size:
      #        max-active:
      #        min-idle:
      #        max-wait:
      #        time-between-eviction-runs-millis:
      #        time-between-log-stats-millis:
      #        stat-sqlmax-size:
      #        min-evictable-idle-time-millis:
      #        max-evictable-idle-time-millis:
      #        test-while-idle:
      #        test-on-borrow:
      #        test-on-return:
      #        validation-query:
      #        validation-query-timeout:
      #        use-global-datasource-stat:
      #        async-init:
      #        clear-filters-enable:
      #        reset-stat-enable:
      #        not-full-timeout-retry-count:
      #        max-wait-thread-count:
      #        fail-fast:
      #        phyTimeout-millis:
      #        keep-alive:
      #        pool-prepared-statements:
      #        init-variants:
      #        init-global-variants:
      #        use-unfair-lock:
      #        kill-when-socket-read-timeout:
      #        connection-properties:
      #        max-pool-prepared-statement-per-connection-size:
      #        init-connection-sqls:
      #        share-prepared-statements:
      #        connection-errorretry-attempts:
      #        break-after-acquire-failure:
      #        filters: stat,wall # 注意这个值和druid原生不一致，默认启动了stat,wall
      datasource:
        master:
          username: root
          password: 123456
          url: jdbc:mysql://127.0.0.1:3306/yypt?serverTimezone=GMT%2B8&characterEncoding=utf8
          driver-class-name: com.mysql.cj.jdbc.Driver
#          schema: db/schema.sql
          druid: #这里可以重写默认值
            initial-size: 5
#            public-key: MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAKUVA/IL/iON8f63bv2i/pIAK+1sXY228slLkTKrI9axwBMIoPV7+PqdRTv6uqMl3j6nei0EDBWEu/Wp/qOQ/ScCAwEAAQ==
        slave_1:
          username: wms7001beta
          password: wms7001beta
          url: jdbc:oracle:thin:@222.128.47.103:1522:OSGC
          driver-class-name: oracle.jdbc.OracleDriver
          druid:
            initial-size: 6
#        slave_2:
#          username: sa
#          password: "123456"
#          url: jdbc:h2:mem:test
#          driver-class-name: org.h2.Driver
#        slave_3:
#          username: sa
#          password: "123456"
#          url: jdbc:h2:mem:test
#          driver-class-name: org.h2.Driver
#      druid:
#        wall:
#          multi-statement-allow: true
logging:
  level:
    com.baomidou: debug
    org.springframework.jdbc.datasource.init: debug


#mybatis-plus配置
mybatis-plus:
    configuration:
        jdbc-type-for-null: null
    global-config:
        banner: false
    mapper-locations: classpath:mapper/*/*.xml
    type-aliases-package: com.yypt.*.domain



yypt:
    openAopLog: true
    codetimeout: 30
    shiro:
      anonUrl: /login,/user/check/**,/unauthorized/**,/logout
      jwtTimeOut: 3600


server:
  port: 8999
